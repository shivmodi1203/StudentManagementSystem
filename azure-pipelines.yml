# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

# trigger:
# - main

trigger:
  tags:
    include:
      - '*'
  branches:
    exclude:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  isTagOriented: 
  ${{if startsWith(variables['Build.SourceBranch'], 'refs/tags/')}}: 
    buildConfiguration: Release
  ${{else}}: 
    buildConfiguration: Debug

steps:
- task: DotNetCoreCLI@2 
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
    
# - script: echo $(Build.SourceBranch)
#   displayName: 'Debug Source Branch'

# - script: env | sort
#   displayName: 'Debug Environment Variables'

- task: DotNetCoreCLI@2
  displayName: Build-Release
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: Build-Debug
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/devops')
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'
    versionSuffix: '$(Build.BuildId)'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: DotNetCoreCLI@2
  displayName: 'Push Artifact - Tag-Oriented Changes'
  # condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'e022f26b-90cf-4ad9-9058-6eef871a63a0/8f547950-a4b2-4b84-891b-ad02cef6d0f9'
