# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: none

pool: 
  vmImage: ubuntu-latest

steps:
# - task: DotNetCoreCLI@2 
#   displayName: Restore
#   inputs:
#     command: 'restore'
#     projects: '**/*.csproj'
#     feedsToUse: 'select'

- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'sonar'
    scannerMode: 'MSBuild'
    projectKey: 'shiv-_Test_shiv-_Test_fc00f397-6d3b-4a9c-b7fd-cc849db08a71'
    projectName: '.NET-Project'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '**/*.csproj'
# - task: JavaToolInstaller@0
#   inputs:
#     versionSpec: '11'
#     jdkArchitectureOption: 'x64'
#     jdkSourceOption: 'LocalDirectory'
#     jdkFile: '/usr/lib/jvm/java-11-openjdk-amd64/bin/java'
#     jdkDestinationDirectory: '/home/einfochips/myagent/_work/9/s/'
#     cleanDestinationDirectory: true

- task: SonarQubeAnalyze@5
  inputs:
    jdkversion: 'JAVA_HOME_11_X64'

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

# - task: DotNetCoreCLI@2
#   displayName: Pack
#   inputs:
#     command: 'pack'
#     packagesToPack: '**/*.csproj'
#     versioningScheme: 'off'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'publish'
#     publishWebProjects: false
#     projects: '**/*.csproj'
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: false
# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Artifact'
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'
    
# - script: |
#     ls $(System.DefaultWorkingDirectory)


