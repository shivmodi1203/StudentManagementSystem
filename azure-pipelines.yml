# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: none

pool:
  vmImage: ubuntu-latest

steps:
- task: DotNetCoreCLI@2 
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'off'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    
- script: |
    ls $(Build.ArtifactStagingDirectory)
- task: trivy@1
  inputs:
    version: 'latest'
    docker: false
    path: '$(Build.ArtifactStagingDirectory)/StudentManagementSystem/'
    severities: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
    exitCode: '0'
    options: '--skip-policy-update'
  displayName: "Trivy"

- task: PythonScript@0
  inputs:
    scriptSource: 'inline'
    script: |
      from email.mime.text import MIMEText
      from email.mime.base import MIMEBase
      from email.mime.multipart import MIMEMultipart
      from email import encoders
      import smtplib, os, glob
      import sys, json
      import datetime
      
      _DEFAULT_SERVER = 'sandbox.smtp.mailtrap.io'
      _DEFAULT_PORT = 587
      _DEFAULT_SENDER = 'shiv.modi@eInfochipsIndia.onmicrosoft.com'
      _DEFAULT_RECEIVER = 'shivmodi258@gmail.com'
      dateTime = datetime.datetime.now()
      content = "<html><head></head><body><p>Hello!<br>Please find the test execution report attached.<br></p></body></html>"
      # mailRecipients = [‘reciever_group.example@example.com’]
      my_email = MIMEMultipart()
      my_email["From"] = _DEFAULT_SENDER
      my_email["To"] = ', '.join(mailRecipients)
      my_email["Subject"] = 'Automated Test Report -' + str(dateTime)
      my_email.attach(MIMEText(content, 'html'))
      
      try:
        report= MIMEBase('application', "octet-stream")
        report.set_payload(open("$(System.ArtifactsDirectory)/cucumber.html", "rb").read())
        encoders.encode_base64(report)
        wpr.add_header('Content-Disposition', 'attachment; filename="test-report.html"')
        my_email.attach(wpr)
      except:
        print("HTML report is not available in the build artifact directory")
      
      #my_email[“CC”] = ‘’
      
      smtpObj = smtplib.SMTP(_DEFAULT_SERVER, _DEFAULT_PORT)
      print("Sending email to all stake-holders")
      smtpObj.sendmail(_DEFAULT_SENDER, mailRecipients, my_email.as_string())
      
      print(“Successfully sent email”)

