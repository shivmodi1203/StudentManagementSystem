# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: none

pool:
  vmImage: ubuntu-latest

steps:
- task: DotNetCoreCLI@2 
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'off'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    
- script: |
    ls $(Build.ArtifactStagingDirectory)
- task: trivy@1
  inputs:
    version: 'latest'
    docker: false
    path: '$(Build.ArtifactStagingDirectory)/StudentManagementSystem/'
    severities: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
    exitCode: '0'
    options: '--skip-policy-update'
  displayName: "Trivy"

- task: PythonScript@0
  inputs:
    scriptSource: 'inline'
    script: |
      import smtplib
      from email.mime.text import MIMEText
      from email.mime.multipart import MIMEMultipart
      from email.mime.base import MIMEBase
      from email import encoders
      import os
      # Setup port number and server name

      smtp_port = 587                 # Standard secure SMTP port
      smtp_server = "smtp.gmail.com"  # Google SMTP Server

      # Set up the email lists
      email_from = "ralphbonner8@gmail.com"
      email_list = ["ralphbonner8@gmail.com"]

      # Define the password (better to reference externally)
      pswd = "shivmodi@1203" # As shown in the video this password is now dead, left in as example only


      # name the email subject
      subject = "New email from TIE with attachments!!"



      # Define the email function (dont call it email!)
      def send_emails(email_list):

          for person in email_list:

              # Make the body of the email
              body = f"""
              line 1
              line 2
              line 3
              etc
              """

              # make a MIME object to define parts of the email
              msg = MIMEMultipart()
              msg['From'] = email_from
              msg['To'] = person
              msg['Subject'] = subject

              # Attach the body of the message
              msg.attach(MIMEText(body, 'plain'))

              # Define the file to attach
              filename = ""
              
              for file in os.walk("/tmp/"):
                if file.startswith("trivy"):
                  filename = str(filename)
              print(f"filename is {filename}")


              # Open the file in python as a binary
              attachment= open(filename, 'rb')  # r for read and b for binary

              # Encode as base 64
              attachment_package = MIMEBase('application', 'octet-stream')
              attachment_package.set_payload((attachment).read())
              encoders.encode_base64(attachment_package)
              attachment_package.add_header('Content-Disposition', "attachment; filename= " + filename)
              msg.attach(attachment_package)

              # Cast as string
              text = msg.as_string()

              # Connect with the server
              print("Connecting to server...")
              TIE_server = smtplib.SMTP(smtp_server, smtp_port)
              TIE_server.starttls()
              TIE_server.login(email_from, pswd)
              print("Succesfully connected to server")
              print()


              # Send emails to "person" as list is iterated
              print(f"Sending email to: {person}...")
              TIE_server.sendmail(email_from, person, text)
              print(f"Email sent to: {person}")
              print()

          # Close the port
          TIE_server.quit()


      # Run the function
      send_emails(email_list)
